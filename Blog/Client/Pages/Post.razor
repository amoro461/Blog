@page "/post/{PostId}"
@namespace Blog.Client.Pages
@inject HttpClient HttpClient

<PageTitle>Post</PageTitle>

<body>
    <img class="banner" src="../img/mountain.jpg" alt="waves">
    <div class="wrapper">
        <article class="info">
            <h2>@PostModel.PostTitle</h2>
            <p>@PostModel.PostContent</p>
        </article>
        <div class="comment-section">
            <div class="comments">
                <h3>Leave A Comment</h3>
                <EditForm Model="CommentModel" OnValidSubmit="OnSubmit">
                    <InputTextArea @bind-Value="CommentModel.CommentMessage" cols="30" rows="10"
                        placeholder="Enter your comment"></InputTextArea>
                        <ValidationMessage For="(() => CommentModel.CommentMessage)"></ValidationMessage>
                    <button class='btn' id="btn" type="submit">Submit</button>
                </EditForm>
            </div>
            <h2 class="public-comments">Comments</h2>
            <hr>
            <div class="container" id="container">
                <div class="comment-container">
                    @foreach(CommentModel commentModel in CommentModels)
                    {
                        <div class="comment-card mb-2" id="card">
                            <h5 class="comment-title" id="title">Username</h5>
                            <p class="date">MM/YYYY</p>
                            <p id="text">@commentModel.CommentMessage</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>

@code{
    [Parameter]
    public string PostId { get; set; }

    protected PostModel PostModel { get; set; }
    protected CommentModel CommentModel { get; set; }
    protected List<CommentModel> CommentModels { get; set; }

    protected override void OnInitialized()
    {
        PostModel = new();
        CommentModels = new();
        CommentModel = NewCommentModel();
    }

    protected override async Task OnParametersSetAsync()
    {
        List<PostModel> Posts = new();
        List<CommentModel> AllCommentModels = new();

        Posts = await HttpClient.GetFromJsonAsync<List<PostModel>>("https://db2ass2.azurewebsites.net/api/User_Posts/%7Bid%7D?code=c6QKe6vqMndkZuyk0gkcJrBqLM4TaehjdOSd9vlwvqCFaQMVCQ58Yg==");
        AllCommentModels = await HttpClient.GetFromJsonAsync<List<CommentModel>>("https://db2ass2.azurewebsites.net/api/User_Comments/%7Bid%7D?code=x5wsN4ioVWUx2gFLJVeqe4KzvGz03yhEMJ476RlSrxopMaRYO0UH7A==");
        PostModel = Posts.FirstOrDefault(i => i.PostId.Equals(PostId));
        CommentModels = AllCommentModels.Where(i => i.PostId.Equals(PostId) && !string.IsNullOrEmpty(i.CommentMessage)).ToList();
    }

    private async void OnSubmit(EditContext editContext)
    {
        if(editContext.Validate())
        {
            HttpResponseMessage response = await HttpClient.PostAsJsonAsync<CommentModel>("https://db2ass2.azurewebsites.net/api/User_Comments/%7Bid%7D?code=x5wsN4ioVWUx2gFLJVeqe4KzvGz03yhEMJ476RlSrxopMaRYO0UH7A==", value: CommentModel);

            if(response.IsSuccessStatusCode)
            {
                CommentModels.Add(CommentModel);
                CommentModel = NewCommentModel();
                StateHasChanged();
            }
        }
    }

    private CommentModel NewCommentModel()
    {
        return new CommentModel()
        {
            PostId = PostId,
            CommentMessage = ""
        };
    }
}